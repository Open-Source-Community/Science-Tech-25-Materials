// <auto-generated />
using System;
using Courses;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Courses.Migrations
{
    [DbContext(typeof(CoursesDbContext))]
    [Migration("20250312225613_lazy_loading")]
    partial class lazy_loading
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CourseInstructor", b =>
                {
                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("InstructorsId")
                        .HasColumnType("int");

                    b.HasKey("CourseId", "InstructorsId");

                    b.HasIndex("InstructorsId");

                    b.ToTable("CourseInstructor");
                });

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.Property<int>("StudentsId")
                        .HasColumnType("int");

                    b.Property<int>("coursesId")
                        .HasColumnType("int");

                    b.HasKey("StudentsId", "coursesId");

                    b.HasIndex("coursesId");

                    b.ToTable("CourseStudent");
                });

            modelBuilder.Entity("Courses.Model.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(2);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("_courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Introduction to Algebra and Calculus",
                            Duration = 30,
                            Name = "Mathematics"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Fundamentals of Physics",
                            Duration = 40,
                            Name = "Physics"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Basic Principles of Chemistry",
                            Duration = 35,
                            Name = "Chemistry"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Introduction to Biological Sciences",
                            Duration = 25,
                            Name = "Biology"
                        });
                });

            modelBuilder.Entity("Courses.Model.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("HiringDate")
                        .HasColumnType("Date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HiringDate = new DateTime(2019, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Physics"
                        },
                        new
                        {
                            Id = 2,
                            HiringDate = new DateTime(2020, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mathematics"
                        },
                        new
                        {
                            Id = 3,
                            HiringDate = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Chemistry"
                        },
                        new
                        {
                            Id = 4,
                            HiringDate = new DateTime(2018, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Biology"
                        });
                });

            modelBuilder.Entity("Courses.Model.Instructor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Bonus")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DeptId")
                        .HasColumnType("int");

                    b.Property<decimal>("HourRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DeptId");

                    b.ToTable("Instructors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 University Ave",
                            Bonus = 5000.00m,
                            DeptId = 1,
                            HourRate = 50.00m,
                            Name = "Dr. Smith",
                            Salary = 75000.00m
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 College St",
                            Bonus = 6000.00m,
                            DeptId = 1,
                            HourRate = 55.00m,
                            Name = "Dr. Johnson",
                            Salary = 80000.00m
                        },
                        new
                        {
                            Id = 3,
                            Address = "789 Campus Rd",
                            Bonus = 7000.00m,
                            DeptId = 1,
                            HourRate = 60.00m,
                            Name = "Dr. Brown",
                            Salary = 85000.00m
                        },
                        new
                        {
                            Id = 4,
                            Address = "101 School Ln",
                            Bonus = 8000.00m,
                            DeptId = 2,
                            HourRate = 65.00m,
                            Name = "Dr. Davis",
                            Salary = 90000.00m
                        });
                });

            modelBuilder.Entity("Courses.Model.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StAge")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FName = "John",
                            LName = "Doe",
                            StAddress = "123 Main St",
                            StAge = 20
                        },
                        new
                        {
                            Id = 2,
                            FName = "Jane",
                            LName = "Smith",
                            StAddress = "456 Elm St",
                            StAge = 22
                        },
                        new
                        {
                            Id = 3,
                            FName = "Alice",
                            LName = "Johnson",
                            StAddress = "789 Oak St",
                            StAge = 21
                        },
                        new
                        {
                            Id = 4,
                            FName = "Bob",
                            LName = "Brown",
                            StAddress = "101 Pine St",
                            StAge = 23
                        },
                        new
                        {
                            Id = 5,
                            FName = "Charlie",
                            LName = "Davis",
                            StAddress = "202 Maple St",
                            StAge = 22
                        });
                });

            modelBuilder.Entity("CourseInstructor", b =>
                {
                    b.HasOne("Courses.Model.Course", null)
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Courses.Model.Instructor", null)
                        .WithMany()
                        .HasForeignKey("InstructorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.HasOne("Courses.Model.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Courses.Model.Course", null)
                        .WithMany()
                        .HasForeignKey("coursesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Courses.Model.Instructor", b =>
                {
                    b.HasOne("Courses.Model.Department", "_department")
                        .WithMany("Instructors")
                        .HasForeignKey("DeptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("_department");
                });

            modelBuilder.Entity("Courses.Model.Department", b =>
                {
                    b.Navigation("Instructors");
                });
#pragma warning restore 612, 618
        }
    }
}
